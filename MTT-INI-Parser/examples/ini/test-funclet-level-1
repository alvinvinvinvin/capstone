# Make sure you ignore comments which start with a '#' symbol
# This file just contains some funclets, not necessary a valid MTT file

#-----------------------------------------------------
[MTT]
on_stop=&shell("date")

#-----------------------------------------------------
ompi_snapshot_version_file = &getenv("HOME")/mtt-versions/community/master&getenv("MTT_VERSION_FILE_SUFFIX").txt

#-----------------------------------------------------
ompi_compiler_name = gnu
ompi_compiler_version = &get_gcc_version()
ompi_configure_arguments = CFLAGS=-pipe --enable-picky --enable-debug


#-----------------------------------------------------
exec = mpirun @hosts@ -np &test_np() --prefix &test_prefix() &test_executable() &test_argv()

hosts = &if(&have_hostfile(), "--hostfile " . &hostfile(), \
            &if(&have_hostlist(), "--host " . &hostlist(), ""))

#-----------------------------------------------------
# The @VAR@ reference variables KEY names in this section
exec = mpirun @orte_debug@ --oversubscribe -np &test_np() --mca orte_startup_timeout 10000 @mca@ &test_executable() &te\
st_argv()

parameters = &MPI::OMPI::find_mpirun_params(&test_command_line(), \
                                            &test_executable())

network = &MPI::OMPI::find_network(&test_command_line(), &test_executable())

orte_debug =

mca = --mca coll ^ml &enumerate( \
        "--mca btl sm,tcp,self", \
        "--mca btl vader,tcp,self", \
        "--mca btl tcp,self --mca mpi_leave_pinned 1", \
        "--mca btl tcp,self --mca mpi_leave_pinned_pipeline 1")

            
#-----------------------------------------------------
pass = &and(&test_wifexited(), &eq(&test_wexitstatus(), 0))
skipped = &and(&test_wifexited(), &eq(&test_wexitstatus(), 77))

save_stdout_on_pass = 1
merge_stdout_stderr = 1
stdout_save_lines = 100
stderr_save_lines = 100
report_after_n_results = 100

np = &env_max_procs()

#-----------------------------------------------------
timeout = &max(10, &test_np())
skipped = 0

#-----------------------------------------------------
specify_module = Simple
simple_first:tests = &find_executables(".")

#-----------------------------------------------------
timeout = &max(30, &multiply(20, &test_np()))
np = &min("60", &env_max_procs())

#-----------------------------------------------------
specify_module = Simple
simple_successful:tests = &find_executables("src")

#-----------------------------------------------------
simple_failures:tests = &find_executables(&prepend("src/", &cat("supposed_to_fail")))
simple_failures:pass = &and(&test_wifexited(), &ne(&test_wexitstatus(), 0))

simple_failures:exclusive = 1
simple_failures:timeout = &env_max_procs()

#-----------------------------------------------------
# These tests sleep for 90 seconds (!) before attempting to process                                                     
# any messages                                                                                                          
simple_really_slow:tests = src/MPI_Isend_flood_c src/MPI_Send_flood_c
simple_really_slow:pass = &and(&test_wifexited(), &eq(&test_wexitstatus(), 0))

simple_really_slow:exclusive = 1
simple_really_slow:timeout = &sum(180, &multiply(5, &test_np()))

#-----------------------------------------------------
# This test collectively sleeps for 26 seconds *per MCW rank*                                                           
simple_coll_slow:tests = src/MPI_collective_overlap_c
simple_coll_slow:pass = &and(&test_wifexited(), &eq(&test_wexitstatus(), 0))

simple_coll_slow:exclusive = 1
simple_coll_slow:timeout = &multiply(35, &test_np()))

#-----------------------------------------------------
[Reporter: text file backup]
module = TextFile

textfile_filename = $phase-$section-$mpi_name-$mpi_version.txt

textfile_summary_header = <<EOT
hostname: &shell("hostname")
uname: &shell("uname -a")
who am i: &shell("who am i")
EOT

textfile_summary_footer =
textfile_detail_header =
textfile_detail_footer =
textfile_textwrap = 78

